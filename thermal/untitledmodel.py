# -*- coding: utf-8 -*-
"""Untitled21.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cXBW6ieTMxbAQd6470CBxTLckaP7d_VH
"""

import board
import busio
import adafruit_amg88xx

def capture_thermal_data():
    # Create I2C bus
    i2c_bus = busio.I2C(board.SCL, board.SDA)

    # Create AMG88xx object
    sensor = adafruit_amg88xx.AMG88XX(i2c_bus)

    # Read pixels
    thermal_data = sensor.pixels
    return np.array(thermal_data)

import numpy as np
import tensorflow as tf
from scipy.ndimage import zoom
import time
import board
import busio
import adafruit_amg88xx

# Load the saved model
model_path = 'path_to_save_model/saved_model.h5'
cnn = tf.keras.models.load_model(model_path)

# Create I2C bus and sensor object
i2c_bus = busio.I2C(board.SCL, board.SDA)
sensor = adafruit_amg88xx.AMG88XX(i2c_bus)

def capture_thermal_data():
    # Read pixels from the sensor
    thermal_data = sensor.pixels
    return np.array(thermal_data)

def process_data(thermal_data):
    # Upsample the data to 64x64
    upsampled_data = zoom(thermal_data, 8)
    # Normalize the data (rescale)
    upsampled_data = upsampled_data / 255.0
    # Ensure the data has the shape (64, 64, 3)
    upsampled_data = np.expand_dims(upsampled_data, axis=-1)  # Shape (64, 64, 1)
    upsampled_data = np.repeat(upsampled_data, 3, axis=-1)    # Shape (64, 64, 3)
    upsampled_data = np.expand_dims(upsampled_data, axis=0)   # Shape (1, 64, 64, 3)
    return upsampled_data

def main():
    while True:
        # Capture thermal data from the sensor
        thermal_data = capture_thermal_data()
        # Process the data
        processed_data = process_data(thermal_data)
        # Make a prediction
        prediction = cnn.predict(processed_data)
        # Print the prediction result
        print("Human detected" if prediction[0] > 0.5 else "No human detected")
        # Wait for 10 seconds before the next capture
        time.sleep(10)

if __name__ == "__main__":
    main()

