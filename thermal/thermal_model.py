# -*- coding: utf-8 -*-
"""Untitled20.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nr_R6-blUipIQqIjK-Gdc3R3_guOcpKW
"""

import numpy as np
import cv2  # OpenCV for resizing

input_array = np.array([
[31.50,31.50,31.75,32.25,32.75,33.00,32.75,32.25],
[32.50,31.25,32.75,32.50,32.75,32.25,33.00,32.25],
[32.50,32.50,32.75,33.00,32.25,32.75,32.75,33.25],
[32.50,32.50,32.50,32.75,32.75,32.75,32.50,32.50],
[32.50,32.75,32.50,32.75,32.50,32.75,32.50,32.25],
[33.00,32.75,32.75,32.25,32.75,32.25,32.00,32.00],
[33.25,32.75,32.50,32.75,32.50,32.75,32.25,32.00],
[33.00,32.75,32.75,31.75,32.25,33.00,32.50,33.00],
])

def preprocess_input_array(input_array):
    """
    Preprocess the input array from the AMG8833 sensor.

    Args:
    - input_array (numpy array): The input array from the AMG8833 sensor (8x8).

    Returns:
    - processed_input (numpy array): The processed input ready for the CNN (1, 64, 64, 3).
    """
    # Ensure the input_array is a numpy array and has the shape (8, 8)
    input_array = np.array(input_array).reshape(8, 8)

    # Normalize the array (Assuming the input is in range 0-255)
    input_array = input_array / 255.0

    # Upscale to 64x64
    input_array = cv2.resize(input_array, (64, 64), interpolation=cv2.INTER_LINEAR)

    # Expand dimensions to fit model input shape (64, 64, 1) -> (64, 64, 3)
    input_array = np.expand_dims(input_array, axis=-1)
    input_array = np.repeat(input_array, 3, axis=-1)

    # Add batch dimension (1, 64, 64, 3)
    input_array = np.expand_dims(input_array, axis=0)
    return input_array
proccesed_array =  preprocess_input_array(input_array)
print(proccesed_array)
